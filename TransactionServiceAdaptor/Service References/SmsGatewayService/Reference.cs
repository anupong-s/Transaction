//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.208
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransactionServiceAdaptor.SmsGatewayService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AisSmsReceiveContract", Namespace="http://schemas.carpass.co.th/2010/06/AisSmsReceiveContract")]
    [System.SerializableAttribute()]
    internal partial class AisSmsReceiveContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrontEndTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransacIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FrontEndType {
            get {
                return this.FrontEndTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FrontEndTypeField, value) != true)) {
                    this.FrontEndTypeField = value;
                    this.RaisePropertyChanged("FrontEndType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string NType {
            get {
                return this.NTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NTypeField, value) != true)) {
                    this.NTypeField = value;
                    this.RaisePropertyChanged("NType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string OperationCode {
            get {
                return this.OperationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationCodeField, value) != true)) {
                    this.OperationCodeField = value;
                    this.RaisePropertyChanged("OperationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SendFrom {
            get {
                return this.SendFromField;
            }
            set {
                if ((object.ReferenceEquals(this.SendFromField, value) != true)) {
                    this.SendFromField = value;
                    this.RaisePropertyChanged("SendFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string SendTo {
            get {
                return this.SendToField;
            }
            set {
                if ((object.ReferenceEquals(this.SendToField, value) != true)) {
                    this.SendToField = value;
                    this.RaisePropertyChanged("SendTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TransacId {
            get {
                return this.TransacIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransacIdField, value) != true)) {
                    this.TransacIdField = value;
                    this.RaisePropertyChanged("TransacId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThinkSmartSmsReceiveContract", Namespace="http://schemas.carpass.co.th/2010/06/ThinkSmartSmsReceiveContract")]
    [System.SerializableAttribute()]
    internal partial class ThinkSmartSmsReceiveContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromMobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SmsTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToMobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransacIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string FromMobileNo {
            get {
                return this.FromMobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FromMobileNoField, value) != true)) {
                    this.FromMobileNoField = value;
                    this.RaisePropertyChanged("FromMobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal bool IsSuccessed {
            get {
                return this.IsSuccessedField;
            }
            set {
                if ((this.IsSuccessedField.Equals(value) != true)) {
                    this.IsSuccessedField = value;
                    this.RaisePropertyChanged("IsSuccessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Originator {
            get {
                return this.OriginatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginatorField, value) != true)) {
                    this.OriginatorField = value;
                    this.RaisePropertyChanged("Originator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime SmsTimestamp {
            get {
                return this.SmsTimestampField;
            }
            set {
                if ((this.SmsTimestampField.Equals(value) != true)) {
                    this.SmsTimestampField = value;
                    this.RaisePropertyChanged("SmsTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ToMobileNo {
            get {
                return this.ToMobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ToMobileNoField, value) != true)) {
                    this.ToMobileNoField = value;
                    this.RaisePropertyChanged("ToMobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string TransacId {
            get {
                return this.TransacIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransacIdField, value) != true)) {
                    this.TransacIdField = value;
                    this.RaisePropertyChanged("TransacId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmsGatewayService.ISmsGateway")]
    internal interface ISmsGateway {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsGateway/SendSmsViaAis", ReplyAction="http://tempuri.org/ISmsGateway/SendSmsViaAisResponse")]
        bool SendSmsViaAis(string system, string user, string fromMobileNo, string toMobileNo, string messageContents, string deviceSn, string requestType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsGateway/ReceiveSmsFromAis", ReplyAction="http://tempuri.org/ISmsGateway/ReceiveSmsFromAisResponse")]
        void ReceiveSmsFromAis(TransactionServiceAdaptor.SmsGatewayService.AisSmsReceiveContract aisSmsReceiveContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsGateway/SendSmsViaThinkSmart", ReplyAction="http://tempuri.org/ISmsGateway/SendSmsViaThinkSmartResponse")]
        bool SendSmsViaThinkSmart(string system, string user, string fromMobileNo, string toMobileNo, string messageContents, string deviceSn, string requestType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsGateway/ReceiveSmsFromThinkSmart", ReplyAction="http://tempuri.org/ISmsGateway/ReceiveSmsFromThinkSmartResponse")]
        void ReceiveSmsFromThinkSmart(TransactionServiceAdaptor.SmsGatewayService.ThinkSmartSmsReceiveContract thinkSmartSmsReceiveContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsGateway/ReceiveSmsFromPolice", ReplyAction="http://tempuri.org/ISmsGateway/ReceiveSmsFromPoliceResponse")]
        bool ReceiveSmsFromPolice(string vehicleDetail, string licensePlate, string shortLicensePlateProvince, string vin, string anotherInformation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ISmsGatewayChannel : TransactionServiceAdaptor.SmsGatewayService.ISmsGateway, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class SmsGatewayClient : System.ServiceModel.ClientBase<TransactionServiceAdaptor.SmsGatewayService.ISmsGateway>, TransactionServiceAdaptor.SmsGatewayService.ISmsGateway {
        
        public SmsGatewayClient() {
        }
        
        public SmsGatewayClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmsGatewayClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsGatewayClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsGatewayClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendSmsViaAis(string system, string user, string fromMobileNo, string toMobileNo, string messageContents, string deviceSn, string requestType) {
            return base.Channel.SendSmsViaAis(system, user, fromMobileNo, toMobileNo, messageContents, deviceSn, requestType);
        }
        
        public void ReceiveSmsFromAis(TransactionServiceAdaptor.SmsGatewayService.AisSmsReceiveContract aisSmsReceiveContract) {
            base.Channel.ReceiveSmsFromAis(aisSmsReceiveContract);
        }
        
        public bool SendSmsViaThinkSmart(string system, string user, string fromMobileNo, string toMobileNo, string messageContents, string deviceSn, string requestType) {
            return base.Channel.SendSmsViaThinkSmart(system, user, fromMobileNo, toMobileNo, messageContents, deviceSn, requestType);
        }
        
        public void ReceiveSmsFromThinkSmart(TransactionServiceAdaptor.SmsGatewayService.ThinkSmartSmsReceiveContract thinkSmartSmsReceiveContract) {
            base.Channel.ReceiveSmsFromThinkSmart(thinkSmartSmsReceiveContract);
        }
        
        public bool ReceiveSmsFromPolice(string vehicleDetail, string licensePlate, string shortLicensePlateProvince, string vin, string anotherInformation) {
            return base.Channel.ReceiveSmsFromPolice(vehicleDetail, licensePlate, shortLicensePlateProvince, vin, anotherInformation);
        }
    }
}
